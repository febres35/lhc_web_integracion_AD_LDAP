{"version":3,"file":"777.3fe59bdf7c457583228b.js","mappings":"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","sources":["webpack://LHCVoiceCallAPP/./src/components/parts/VideoStream.js","webpack://LHCVoiceCallAPP/./src/components/parts/MediaStream.js","webpack://LHCVoiceCallAPP/./src/components/VoiceCall.js","webpack://LHCVoiceCallAPP/./src/lib/useInterval.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst VideoStream = props => {\n\n    const [isFullScreen, setFullScreen] = useState(false);\n    \n    useEffect(() => {\n        props.user.videoTrack.play('player-'+props.user.uid);\n    },[]);\n    \n    return <div className={(isFullScreen ? \"col-12\" : \"col\")+\" bg-light m-0 align-middle text-center d-flex p-0\"} id={\"player-\"+props.user.uid} title={\"UID \"+props.user.uid}>\n        <div className=\"full-screen-icon\" onClick={(e) => setFullScreen(!isFullScreen)}>\n            <span className=\"material-icons\">{isFullScreen ? 'fullscreen_exit' : 'fullscreen'}</span>\n        </div>\n    </div>\n}\n\nexport default VideoStream;","import React, { useEffect } from \"react\";\nimport VideoStream from \"./VideoStream\";\n\nimport {useTranslation} from 'react-i18next';\n\nconst MediaStream = props => {\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    if (props.video == true) {\n        return <VideoStream user={props.user} key={\"video-stream-\"+props.user.uid} />\n    } else {\n        return (<div className=\"col bg-light m-0 align-middle text-center d-flex p-0\" id={\"player-\"+props.user.uid} title={\"UID \"+props.user.uid}>\n                    <div className=\"align-self-center mx-auto text-muted font-weight-bold\" title={\"UID \"+props.user.uid}><span className=\"material-icons\">graphic_eq</span>{t('voice_call.audio_call')}</div>\n               </div>)\n\n    }\n}\n\nexport default MediaStream;","import React, { useEffect, useState, useReducer, useRef, useBoolean } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"../lib/useInterval\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\nimport MediaStream from \"./parts/MediaStream\";\n\nconst client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'user_published': {\n\n            if (typeof state.remoteUsers[action.user.uid] == 'undefined') {\n                var obj =  {'user' : action.user, video: (action.media == 'video'), audio: (action.media == 'audio'), media : [action.media]};\n                state.remoteUsers[action.user.uid] = obj;\n            } else {\n                if (action.media == 'audio') {\n                    state.remoteUsers[action.user.uid].audio = true;\n                } else if (action.media == 'video') {\n                    state.remoteUsers[action.user.uid].video = true;\n                }\n\n                state.remoteUsers[action.user.uid].media.push(action.media);\n            }\n\n            return { ...state}\n        }\n\n        case 'user_update': {\n            if (typeof state.remoteUsers[action.user.uid] != 'undefined') {\n                if (action.media == 'audio') {\n                    state.remoteUsers[action.user.uid].audio = false;\n                } else if (action.media == 'video') {\n                    state.remoteUsers[action.user.uid].video = false;\n                }\n                state.remoteUsers[action.user.uid];\n            }\n            return { ...state}\n        }\n\n        case 'user_unpublished': {\n            delete state.remoteUsers[action.user.uid];\n            return { ...state}\n        }\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst VoiceCall = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        call : {},\n        localTracks : {\n            videoTrack : null,\n            audioTrack: null\n        },\n        hasAudio: false,\n        hasVideo: false,\n        screenShare: false,\n        remoteUsers : {},\n        uid : null,\n        inCall: false,\n        pendingJoin: false,\n        type: \"\",\n        isMuted : false\n    });\n\n    const STATUS_OP_PENDING = 0;\n    const STATUS_OP_JOINED = 1;\n\n    const STATUS_VI_PENDING = 0;\n    const STATUS_VI_REQUESTED = 1;\n    const STATUS_VI_JOINED = 2;\n\n    const STATUS_PENDING = 0;\n    const STATUS_CONFIRM = 1;\n    const STATUS_CONFIRMED = 2;\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    useEffect(() => {\n\n        updateUI();\n\n        AgoraRTC.getDevices()\n            .then(devices => {\n\n                const audioDevices = devices.filter(function(device){\n                    return device.kind === \"audioinput\";\n                });\n\n                const videoDevices = devices.filter(function(device){\n                    return device.kind === \"videoinput\";\n                });\n\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"hasAudio\" : (audioDevices.length > 0),\n                        \"hasVideo\" : (videoDevices.length > 0)\n                    }\n                });\n            });\n    },[]);\n\n    const { t, i18n } = useTranslation('voice_call');\n\n    const requestJoin = (type) => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/request';\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/(action)/join';\n        }\n\n        axios.post(url, {\n            \"type\" : type\n        }).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data,\n                    \"type\" : type,\n                    \"pendingJoin\" : true\n                }\n            });\n        });\n    }\n\n    const cancelJoin = async (type) => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/' + type;\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + '/(action)/' + type;\n        }\n\n        axios.get(url).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n\n        if (type == 'leave' || type == 'end' || type == 'cancel')\n        {\n\n            Object.keys(state.localTracks).forEach(trackName => {\n                var track = state.localTracks[trackName];\n                if (track) {\n                    track.stop();\n                    track.close();\n                    state.localTracks[trackName] = undefined;\n                }\n            })\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"remoteUsers\" : {},\n                    \"uid\": null,\n                    \"inCall\": false,\n                    \"localTracks\" : {\n                        videoTrack : null,\n                        audioTrack: null\n                    }\n                }\n            });\n\n            // leave the channel\n           await client.leave();\n        }\n    }\n\n    const muteMicrophone = () => {\n        if (state.localTracks.audioTrack !== null) {\n            state.localTracks.audioTrack.setEnabled(state.isMuted);\n            dispatch({\n                type: 'update',\n                value: {\n                    \"isMuted\" : !state.isMuted\n                }\n            });\n        }\n    }\n\n    const updateUI = () => {\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash;\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id;\n        }\n\n        axios.get(url).then(result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n        });\n    }\n\n    useInterval(\n        () => {\n            updateUI()\n        },\n        (state.call.status != STATUS_CONFIRMED || state.call.vi_status != STATUS_VI_JOINED || state.call.op_status != STATUS_OP_JOINED) ? 2000 : null\n    );\n\n    const subscribe = async (user, mediaType) => {\n\n        const uid = user.uid;\n\n        // subscribe to a remote user\n        await client.subscribe(user, mediaType);\n\n        dispatch({\n            type: 'user_published',\n            media: mediaType,\n            user: user\n        });\n\n        if (mediaType === 'audio') {\n            user.audioTrack.play();\n        }\n    }\n\n    const handleUserPublished = (user, mediaType) =>  {\n        subscribe(user, mediaType);\n    }\n\n    const handleUserLeft = (user) => {\n        dispatch({\n            type: 'user_unpublished',\n            user: user\n        });\n        updateUI();\n    }\n\n    const handleUserUnpublished = (user, mediaType) => {\n        dispatch({\n            type: 'user_update',\n            media: mediaType,\n            user: user\n        });\n    }\n\n    // Auto join leave for an operator\n    useEffect(() => {\n        if (props.isVisitor === true && state.pendingJoin == true) {\n            if (state.call.vi_status === STATUS_VI_JOINED) {\n                join(state.call);\n            } else if (state.inCall === true && state.call.vi_status !== STATUS_VI_JOINED) {\n                cancelJoin('cancel');\n            }\n        }\n    },[state.call.vi_status, state.pendingJoin]);\n\n    // Auto join for the operator\n    useEffect(() => {\n        if (state.call.op_status === STATUS_OP_JOINED && props.isVisitor === false && state.inCall === false && state.pendingJoin == true) {\n            join(state.call);\n        }\n    },[state.call.op_status, state.pendingJoin]);\n\n    const screenShare = async () => {\n\n        if (state.screenShare == true) {\n\n            let localTracks = state.localTracks;\n\n            if (localTracks.videoTrack) {\n                await client.unpublish(localTracks.videoTrack);\n                localTracks.videoTrack.stop();\n                localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = null;\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"screenShare\": false,\n                    \"localTracks\" : localTracks\n                }\n            });\n\n            // Add camera back if it was required\n            if (state.type == \"audiovideo\") {\n                addCamera();\n            }\n\n            return ;\n        }\n\n        try {\n            const screenTrack = await AgoraRTC.createScreenVideoTrack(  );\n\n            let localTracks = state.localTracks;\n\n            if (state.localTracks.videoTrack) {\n                await client.unpublish(state.localTracks.videoTrack);\n                state.localTracks.videoTrack.stop();\n                state.localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = screenTrack;\n            localTracks.videoTrack.play(\"local-player\");\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"screenShare\": true,\n                    \"localTracks\" : localTracks,\n                }\n            });\n\n            await client.publish(screenTrack);\n\n        } catch (e) {\n            alert('Screen could not be shared!');\n        }\n    }\n\n    const addCamera = async () => {\n\n        if (state.localTracks.videoTrack && state.localTracks.videoTrack !== null) {\n\n            let localTracks = state.localTracks;\n\n            if (localTracks.videoTrack) {\n                await client.unpublish(localTracks.videoTrack);\n                localTracks.videoTrack.stop();\n                localTracks.videoTrack.close();\n            }\n\n            localTracks.videoTrack = null;\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"type\": \"audio\",\n                    \"localTracks\" : localTracks\n                }\n            });\n\n            return ;\n\n        } else {\n\n            const videoTrack = await AgoraRTC.createCameraVideoTrack();\n\n            let localTracks = state.localTracks;\n\n            localTracks.videoTrack = videoTrack;\n            localTracks.videoTrack.play(\"local-player\");\n\n            dispatch({\n                type: 'update',\n                value: {\n                    \"inCall\": true,\n                    \"type\": \"audiovideo\",\n                    \"localTracks\" : localTracks,\n                }\n            });\n\n            await client.publish(videoTrack);\n        }\n\n    }\n\n    const tokenWillExpire = () => {\n\n        var url = null;\n\n        if (props.isVisitor === true) {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/join/\" + props.initParams.id + '/' + props.initParams.hash + '/(action)/token';\n        } else {\n            url = WWW_DIR_JAVASCRIPT  + \"voicevideo/joinop/\" + props.initParams.id + '/' + '/(action)/token';\n        }\n\n        axios.get(url).then( result => {\n            dispatch({\n                type: 'update',\n                value: {\n                    \"call\" : result.data\n                }\n            });\n\n            client.renewToken(result.data.token);\n        });\n\n    }\n\n    const join = async (data) => {\n\n        if (state.inCall === true || (props.isVisitor === true && data.vi_status != STATUS_VI_JOINED) ) {\n            return;\n        }\n\n        // add event listener to play remote tracks when remote user publishs.\n        client.on(\"user-published\", handleUserPublished);\n        client.on(\"user-unpublished\", handleUserUnpublished);\n        client.on(\"user-left\", handleUserLeft);\n        client.on(\"token-privilege-will-expire\", tokenWillExpire);\n\n        var uui = await client.join(props.initParams.appid, props.initParams.id + '_' + props.initParams.hash, data.token || null);\n        var localTracks = {\n            audioTrack : await AgoraRTC.createMicrophoneAudioTrack()\n        };\n\n        if (state.type == \"audiovideo\" || (props.isVisitor == true && state.call.video == 1)) {\n            localTracks.videoTrack = await AgoraRTC.createCameraVideoTrack();\n            localTracks.videoTrack.play(\"local-player\");\n        }\n\n        dispatch({\n            type: 'update',\n            value: {\n                \"uid\" : uui,\n                \"inCall\": true,\n                \"localTracks\" : localTracks,\n            }\n        });\n\n        await client.publish(Object.values(localTracks));\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"d-flex flex-md-row flex-column flex-grow-1 pt-0\">\n                <div className=\"col bg-light m-0 align-middle text-center d-flex p-0\" title={\"UID \"+state.uid} id=\"local-player\">\n                    {props.isVisitor == true && state.call.vi_status == STATUS_VI_REQUESTED && <div className=\"align-self-center mx-auto text-muted font-weight-bold\">{t('voice_call.wait_join_long')}</div>}\n                    {state.localTracks.videoTrack == null && state.inCall == true && <div className=\"align-self-center mx-auto text-muted font-weight-bold\"><span className=\"material-icons\">graphic_eq</span>{t('voice_call.me_audio')}</div>}\n                </div>\n                {state.inCall == true && Object.keys(state.remoteUsers).map((val, k) => {\n                    return (<MediaStream user={state.remoteUsers[val].user} key={\"media_\" + (state.remoteUsers[val].user.uid) + '_' + state.remoteUsers[val].media.join('_')} audio={state.remoteUsers[val].audio} video={state.remoteUsers[val].video} media={state.remoteUsers[val].media} />)\n                })}\n            </div>\n            <div className=\"row border-top\">\n\n                <div className=\"btn-toolbar p-2 text-center mx-auto btn-toolbar\" role=\"toolbar\" >\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {props.isVisitor == true && state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">{t('voice_call.wait_let_in')} </span>}\n                        {props.isVisitor == true && (state.call.vi_status == STATUS_VI_PENDING || state.pendingJoin === false) && <span className=\"text-muted py-2\">{t('voice_call.join_to_start')} </span>}\n\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_JOINED && <span className=\"text-muted py-2\">{t('voice_call.visitor_joined')}</span>}\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_PENDING && <span className=\"text-muted py-2\">{t('voice_call.pending_visitor_join')}</span>}\n                        {props.isVisitor == false && state.call.vi_status == STATUS_VI_REQUESTED && <span className=\"text-muted py-2\">{t('voice_call.visitor_waiting_in')}</span>}\n                    </div>\n\n                    <div className=\"p-2 text-center mx-auto btn-group\" role=\"group\">\n                        {props.isVisitor == false && state.call.token != '' && state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-sm btn-outline-primary\" onClick={() => cancelJoin('letvisitorin')} ><span className=\"material-icons\">face</span>{t('voice_call.let_visitor_in')}</button>}\n\n                        {props.isVisitor == false && state.inCall == true && <React.Fragment>\n                            <button title={t('voice_call.leave_a_call')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('leave')}><span className=\"material-icons\">exit_to_app</span>{t('voice_call.leave_call_op')}</button>\n                            <button title={t('voice_call.end_call_op')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => cancelJoin('end')}><span className=\"material-icons\">call_end</span>{t('voice_call.end_call_button')}</button>\n                            <button title={state.isMuted == true ? t('voice_call.unmute_mic') : t('voice_call.mute_mic')} className=\"btn btn-sm btn-outline-secondary\" onClick={() => muteMicrophone()} ><span className=\"material-icons mr-0\">{state.isMuted == true ? 'mic_off' : 'mic'}</span></button>\n                            {props.initParams.options.video == true && state.hasVideo === true && <button className=\"btn btn-sm btn-outline-secondary\" disabled={state.screenShare} onClick={() => addCamera()} title={state.type == \"audio\" ? t('voice_call.share_video') : t('voice_call.stop_sharing_video') }><span className=\"material-icons mr-0\">{(state.type == \"audio\" || state.screenShare == true) ? 'videocam_off' : 'videocam'}</span></button>}\n                            {props.initParams.options.screenshare == true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => screenShare()} title={state.screenShare == true ? t('voice_call.stop_share_screen') : t('voice_call.share_your_screen')}><span className=\"material-icons mr-0\">{state.screenShare == true ? 'stop_screen_share' : 'screen_share'}</span></button>}\n                        </React.Fragment>}\n\n                        {((props.isVisitor == false && state.call.op_status == STATUS_OP_PENDING) || (props.isVisitor == true && state.call.vi_status == STATUS_VI_PENDING) || state.pendingJoin == false) && <React.Fragment>\n                            {state.hasAudio === true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audio')}><span className=\"material-icons\">call</span>{t('voice_call.join_with_audio')}</button>}\n                            {props.initParams.options.video == true && state.hasVideo === true && <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => requestJoin('audiovideo')}><span className=\"material-icons\">video_call</span>{t('voice_call.join_with_audio_video')}</button>}\n                        </React.Fragment>}\n\n                        {props.isVisitor == true && state.inCall == true && <React.Fragment>\n                            <button className=\"btn btn-outline-primary btn-sm\" onClick={() => cancelJoin('cancel')} ><span className=\"material-icons\">call_end</span>{t('voice_call.leave_room')}</button>\n                            <button title={state.isMuted == true ? t('voice_call.unmute_mic') : t('voice_call.mute_mic')} className=\"btn btn-outline-secondary btn-sm\" onClick={() => muteMicrophone()} ><span className=\"material-icons mr-0\">{state.isMuted == true ? 'mic_off' : 'mic'}</span></button>\n                            {props.initParams.options.video == true && state.hasVideo === true && <button disabled={state.screenShare} className=\"btn btn-outline-secondary btn-sm\" onClick={() => addCamera()} title={state.type == \"audio\" ? t('voice_call.share_video') : t('voice_call.stop_sharing_video')} ><span className=\"material-icons mr-0\">{(state.type == \"audio\" || state.screenShare == true) ? 'videocam_off' : 'videocam'}</span></button>}\n                            {props.initParams.options.screenshare == true && <button className=\"btn btn-outline-secondary btn-sm\" onClick={() => screenShare()} title={state.screenShare == true ? t('voice_call.stop_share_screen') : t('voice_call.share_your_screen')}><span className=\"material-icons mr-0\">{state.screenShare == true ? 'stop_screen_share' : 'screen_share'}</span></button>}\n                        </React.Fragment>}\n\n                        {props.isVisitor == true && state.pendingJoin === true && state.call.vi_status == STATUS_VI_REQUESTED && <button className=\"btn btn-outline-primary btn-sm\" onClick={() => cancelJoin('cancel')} >{t('voice_call.cancel_join')}</button>}\n\n                    </div>\n\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default VoiceCall","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["props","useState","isFullScreen","setFullScreen","useEffect","user","videoTrack","play","uid","className","id","title","onClick","e","useTranslation","t","i18n","video","key","client","AgoraRTC","mode","codec","reducer","state","action","type","value","remoteUsers","obj","media","audio","push","Error","useReducer","call","localTracks","audioTrack","hasAudio","hasVideo","screenShare","inCall","pendingJoin","isMuted","dispatch","chatsRef","useRef","current","updateUI","then","devices","audioDevices","filter","device","kind","videoDevices","length","callback","delay","savedCallback","requestJoin","url","isVisitor","WWW_DIR_JAVASCRIPT","initParams","hash","axios","result","data","cancelJoin","Object","keys","forEach","trackName","track","stop","close","undefined","leave","muteMicrophone","setEnabled","status","vi_status","op_status","setInterval","clearInterval","subscribe","mediaType","handleUserPublished","handleUserLeft","handleUserUnpublished","join","unpublish","addCamera","screenTrack","publish","alert","tokenWillExpire","renewToken","token","on","appid","uui","values","map","val","k","role","options","disabled","screenshare"],"sourceRoot":""}